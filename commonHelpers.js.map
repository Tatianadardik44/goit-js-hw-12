{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nexport let page = 2;\nexport async function objGallery(names, page) {\n    const  path = `https://pixabay.com/api/`;\n    const API_KEY = `43257905-28a3b58ba6106b31a5e4f67d7`;\n    const params = new URLSearchParams({\n        key: API_KEY,\n        q: names,\n        image_type: `photo`,\n        orientation: `horizontal`,\n        safesearch: true,\n        page: page,\n        per_page: 15\n    })\n    const {data} = await axios(`${path}?${params}`); \n    console.log(data); \n    return data;\n    \n\n    \n}\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nexport const list = document.querySelector(\".gallery-nav\");\nexport function createMarkup(data) {\n    const markup = data.hits\n    .map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads\n    }) => {\n        return `\n        <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n        <img \n        class=\"gallery-image\"\n        src=\"${webformatURL}\"\n        alt=\"${tags}\"/>\n        <div class=\"image-information\">\n        <p>Likes: ${likes}</p>\n        <p>Views: ${views}</p>\n        <p>Comments: ${comments}</p>\n        <p>Downloads: ${downloads}</p>\n        </div>\n        \n        </a>\n        </li>`;\n       \n    })\n    .join(\"\");\n    list.insertAdjacentHTML(\"beforeend\", markup); \n\nconst lightbox = new SimpleLightbox('.gallery a', {  captionsData: `alt`,\n  captionDelay: 250,\n});\n    lightbox.refresh(); \n};","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { objGallery } from \"./js/pixabay-api\";\nimport { createMarkup } from \"./js/render-functions\";\nimport { list } from \"./js/render-functions\";\nimport { page } from \"./js/pixabay-api\";\n\nconsole.log(page);\nconst loaderElement = document.querySelector(\".loader\");\nconst formGallery = document.querySelector(\".input-field\");\nconst loadBtn = document.querySelector(\".js-load-more\");\nloadBtn.addEventListener(\"click\", loadFoto);\nformGallery.addEventListener(\"submit\", handleSubmit);\n// function handleSubmit(event) {\n//     event.preventDefault();\n//     list.innerHTML = \"\";\n//     loaderElement.classList.remove(\".hidden\")\n//     const names = event.target.elements.designation.value.trim();\n    \n//     objGallery(names, page)\n//         .then(data, page => {\n           \n//             if (data.totalHits === 0 ||names === '') {\n//                 loaderElement.classList.add(\".hidden\");\n//                 iziToast.show({\n//                     message: 'Sorry, there are no images matching your search query. Please try again!',\n//                     messageColor: 'white',\n//                     backgroundColor: 'red',\n//                     position: 'bottomCenter',\n//                     iconColor: 'white'\n//                 });\n//             } else if (page <= total_pages){\n//                 loaderElement.classList.add(\".hidden\");\n//                 iziToast.success({\n//                     iconColor: 'yellow',\n//                     message: 'Enjoy watching!',\n//                     position: 'topRight',\n//                     backgroundColor: 'blue',\n//                     messageColor: 'yellow'\n//                 });\n//                 createMarkup(data);\n//                 loadBtn.classList.replace(\"load-more-hidden\", \"load-more\")\n//                 loadBtn.addEventListener(\"click\", loadElements);\n//                async function loadElements() {\n//                    page += 1;\n//                    loadBtn.disabled = true;\n//                    try {\n//                        const data = await objGallery(page);\n//                        createMarkup(data);\n//                        loadBtn.disabled = false;\n\n//                        if (data.page >= data.total_pages) {\n//                            loadBtn.classList.replace(\"load-more\", \"load-more-hidden\");\n//                        }\n//                    }\n//                    catch (error) {\n//                        alert(error.message)\n//                    }\n//                }\n//             }\n//         })\n   \n        \n    \n//     event.target.reset();\n// }\nfunction handleSubmit(event) {\n    event.preventDefault();\n    list.innerHTML = \"\";\n    loaderElement.classList.remove(\".hidden\")\n    const names = event.target.elements.designation.value.trim();\n    objGallery(names, page)\n       \n        .then(data => {\n            console.log(data);\n            if (data.totalHits === 0 ||names === '') {\n                loaderElement.classList.add(\".hidden\");\n                iziToast.show({\n                    message: 'Sorry, there are no images matching your search query. Please try again!',\n                    messageColor: 'white',\n                    backgroundColor: 'red',\n                    position: 'bottomCenter',\n                    iconColor: 'white'\n                });\n            } else  {\n               \n                loaderElement.classList.add(\".hidden\");\n                iziToast.success({\n                    iconColor: 'yellow',\n                    message: 'Enjoy watching!',\n                    position: 'topRight',\n                    backgroundColor: 'blue',\n                    messageColor: 'yellow'\n                });\n                createMarkup(data);  \n            }\n        });\n    event.target.reset();\n}\n\n// async function loadFoto() {\n//     page = page + 1;\n//     console.log(page);\n//     loadBtn.classList.add(\".hidden\");\n//     try {\n//         const data = await objGallery(page);\n//         list.insertAdjacentHTML(\"beforeend\", createMarkup(data));\n//        loadBtn.classList.add(\".hidden\");\n//         if (data.page >= data.totalHits) {\n//             loadBtn.classList.replace(\"load-more\", \"load-more-hidden\");\n//         }\n//     }\n//     catch (error) {\n//         alert(error.message)\n//     }\n// };\n  "],"names":["page","objGallery","names","path","API_KEY","params","data","axios","list","createMarkup","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","loaderElement","formGallery","loadBtn","handleSubmit","event","iziToast"],"mappings":"owBACO,IAAIA,EAAO,EACX,eAAeC,EAAWC,EAAOF,EAAM,CAC1C,MAAOG,EAAO,2BACRC,EAAU,qCACVC,EAAS,IAAI,gBAAgB,CAC/B,IAAKD,EACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMF,EACN,SAAU,EAClB,CAAK,EACK,CAAC,KAAAM,CAAI,EAAI,MAAMC,EAAM,GAAGJ,CAAI,IAAIE,CAAM,EAAE,EAC9C,eAAQ,IAAIC,CAAI,EACTA,CAIX,CClBO,MAAME,EAAO,SAAS,cAAc,cAAc,EAClD,SAASC,EAAaH,EAAM,CAC/B,MAAMI,EAASJ,EAAK,KACnB,IAAI,CAAC,CACF,aAAAK,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,wCAEyBL,CAAa;AAAA;AAAA;AAAA,eAGtCD,CAAY;AAAA,eACZE,CAAI;AAAA;AAAA,oBAECC,CAAK;AAAA,oBACLC,CAAK;AAAA,uBACFC,CAAQ;AAAA,wBACPC,CAAS;AAAA;AAAA;AAAA;AAAA,cAM5B,EACA,KAAK,EAAE,EACRT,EAAK,mBAAmB,YAAaE,CAAM,EAE9B,IAAIQ,EAAe,aAAc,CAAG,aAAc,MACjE,aAAc,GAChB,CAAC,EACY,QAAO,CACpB,CChCA,QAAQ,IAAIlB,CAAI,EAChB,MAAMmB,EAAgB,SAAS,cAAc,SAAS,EAChDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAU,SAAS,cAAc,eAAe,EACtDA,EAAQ,iBAAiB,QAAS,QAAQ,EAC1CD,EAAY,iBAAiB,SAAUE,CAAY,EAsDnD,SAASA,EAAaC,EAAO,CACzBA,EAAM,eAAc,EACpBf,EAAK,UAAY,GACjBW,EAAc,UAAU,OAAO,SAAS,EACxC,MAAMjB,EAAQqB,EAAM,OAAO,SAAS,YAAY,MAAM,OACtDtB,EAAWC,EAAOF,CAAI,EAEjB,KAAKM,GAAQ,CACV,QAAQ,IAAIA,CAAI,EACZA,EAAK,YAAc,GAAIJ,IAAU,IACjCiB,EAAc,UAAU,IAAI,SAAS,EACrCK,EAAS,KAAK,CACV,QAAS,2EACT,aAAc,QACd,gBAAiB,MACjB,SAAU,eACV,UAAW,OAC/B,CAAiB,IAGDL,EAAc,UAAU,IAAI,SAAS,EACrCK,EAAS,QAAQ,CACb,UAAW,SACX,QAAS,kBACT,SAAU,WACV,gBAAiB,OACjB,aAAc,QAClC,CAAiB,EACDf,EAAaH,CAAI,EAEjC,CAAS,EACLiB,EAAM,OAAO,OACjB"}